Terminals unused in grammar

   SHL
   SAR
   OPPSITE
   BOOL


State 86 conflicts: 2 shift/reduce
State 87 conflicts: 2 shift/reduce
State 110 conflicts: 4 shift/reduce
State 128 conflicts: 1 reduce/reduce
State 161 conflicts: 1 shift/reduce, 1 reduce/reduce
State 163 conflicts: 1 shift/reduce
State 164 conflicts: 1 shift/reduce
State 230 conflicts: 1 shift/reduce
State 232 conflicts: 4 shift/reduce
State 242 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: CompUnit

    2 CompUnit: FuncDef
    3         | Decl
    4         | Decl CompUnit
    5         | FuncDef CompUnit

    6 FuncDef: type IDENTIFIER LPAREN FuncFParams RPAREN Block
    7        | type IDENTIFIER LPAREN RPAREN Block
    8        | type MAIN LPAREN RPAREN Block

    9 FuncFParams: FuncFParam CommaFuncFParam

   10 CommaFuncFParam: COMMA FuncFParam
   11                | %empty

   12 FuncFParam: type IDENTIFIER LSQUARE RSQUARE MultiExp
   13           | type IDENTIFIER

   14 MultiExp: LSQUARE Exp RSQUARE MultiExp
   15         | %empty

   16 Block: LBRACE MultiBlockItem RBRACE

   17 MultiBlockItem: BlockItem MultiBlockItem
   18               | %empty

   19 BlockItem: Stmt
   20          | Decl

   21 Decl: ConstDecl
   22     | VarDecl

   23 ConstDecl: CONST type ConstDef CommaConstDef SEMI

   24 CommaConstDef: COMMA ConstDef CommaConstDef
   25              | %empty

   26 ConstDef: IDENTIFIER MultiConstExp ASSIGN ConstInitVal

   27 MultiConstExp: LSQUARE ConstExp RSQUARE MultiConstExp
   28              | %empty

   29 ConstExp: AddExp

   30 ConstInitVal: ConstExp
   31             | LBRACE ConstInitVal CommaConstInitVal RBRACE
   32             | LBRACE RBRACE

   33 CommaConstInitVal: COMMA ConstInitVal CommaConstInitVal
   34                  | %empty

   35 VarDecl: type VarDef CommaVarDef SEMI

   36 CommaVarDef: COMMA VarDef CommaVarDef
   37            | %empty

   38 VarDef: IDENTIFIER MultiConstExp
   39       | IDENTIFIER MultiConstExp ASSIGN InitVal

   40 InitVal: Exp
   41        | LBRACE InitVal CommaInitVal RBRACE
   42        | LBRACE RBRACE

   43 CommaInitVal: COMMA InitVal CommaInitVal
   44             | %empty

   45 Stmt: LVal ASSIGN Exp SEMI
   46     | LVal PLUS ASSIGN Exp SEMI
   47     | LVal MINUS ASSIGN Exp SEMI
   48     | LVal TIMES ASSIGN Exp SEMI
   49     | LVal OVER ASSIGN Exp SEMI
   50     | Exp SEMI
   51     | SEMI
   52     | Block
   53     | IF LPAREN Cond RPAREN Stmt ElseStmt
   54     | FOR LPAREN Exp1 Exp2 Exp3 RPAREN Stmt
   55     | WHILE LPAREN Cond RPAREN Stmt
   56     | BREAK SEMI
   57     | CONTINUE SEMI
   58     | RETURN Exp SEMI
   59     | RETURN SEMI
   60     | PRINTF LPAREN Exp CommaExp RPAREN SEMI
   61     | SCANF LPAREN Exp CommaExp RPAREN SEMI

   62 Exp1: VarDecl
   63     | Stmt

   64 Exp2: Cond SEMI
   65     | SEMI

   66 Exp3: Exp
   67     | %empty
   68     | LVal ASSIGN Exp
   69     | LVal PLUS ASSIGN Exp
   70     | LVal MINUS ASSIGN Exp
   71     | LVal TIMES ASSIGN Exp
   72     | LVal OVER ASSIGN Exp

   73 ElseStmt: ELSE Stmt
   74         | %empty

   75 LVal: IDENTIFIER MultiExp

   76 Exp: AddExp

   77 AddExp: MulExp
   78       | MulExp PLUS AddExp
   79       | MulExp MINUS AddExp

   80 MulExp: UnaryExp
   81       | UnaryExp TIMES MulExp
   82       | UnaryExp OVER MulExp
   83       | UnaryExp MOD MulExp

   84 UnaryExp: PrimaryExp
   85         | IDENTIFIER LPAREN FuncRParams RPAREN
   86         | IDENTIFIER LPAREN RPAREN
   87         | UnaryOp UnaryExp
   88         | UnaryOp LPAREN Cond RPAREN
   89         | SpecialUnaryOp UnaryExp
   90         | INC UnaryExp
   91         | DEC UnaryExp
   92         | UnaryExp INC
   93         | UnaryExp DEC

   94 FuncRParams: Exp CommaExp

   95 CommaExp: COMMA Exp CommaExp
   96         | %empty

   97 UnaryOp: MINUS
   98        | OPPOSITE

   99 SpecialUnaryOp: TIMES
  100               | B_AND

  101 PrimaryExp: LPAREN Exp RPAREN
  102           | LVal
  103           | INTEGER
  104           | CHAR
  105           | STRING

  106 Cond: LOrExp

  107 LOrExp: LAndExp
  108       | LPAREN LAndExp RPAREN
  109       | LAndExp OR LOrExp

  110 LAndExp: EqExp
  111        | LPAREN EqExp RPAREN
  112        | EqExp AND LAndExp

  113 EqExp: RelExp
  114      | LPAREN RelExp RPAREN
  115      | EqExp EQ EqExp
  116      | EqExp NZ EqExp

  117 RelExp: AddExp
  118       | LPAREN AddExp RPAREN
  119       | RelExp LT AddExp
  120       | RelExp GT AddExp
  121       | RelExp LE AddExp
  122       | RelExp GE AddExp

  123 type: T_INT
  124     | T_CHAR
  125     | T_BOOL
  126     | T_STRING
  127     | T_VOID


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 124
T_INT (259) 123
T_STRING (260) 126
T_BOOL (261) 125
T_VOID (262) 127
IF (263) 53
MAIN (264) 8
ELSE (265) 73
FOR (266) 54
WHILE (267) 55
PRINTF (268) 60
SCANF (269) 61
BREAK (270) 56
CONTINUE (271) 57
RETURN (272) 58 59
LBRACE (273) 16 31 32 41 42
RBRACE (274) 16 31 32 41 42
SEMI (275) 23 35 45 46 47 48 49 50 51 56 57 58 59 60 61 64 65
PLUS (276) 46 69 78
MINUS (277) 47 70 79 97
TIMES (278) 48 71 81 99
OVER (279) 49 72 82
ASSIGN (280) 26 39 45 46 47 48 49 68 69 70 71 72
INC (281) 90 92
DEC (282) 91 93
MOD (283) 83
LT (284) 119
EQ (285) 115
GT (286) 120
NZ (287) 116
GE (288) 122
LE (289) 121
SHL (290)
SAR (291)
AND (292) 112
OR (293) 109
OPPSITE (294)
LPAREN (295) 6 7 8 53 54 55 60 61 85 86 88 101 108 111 114 118
RPAREN (296) 6 7 8 53 54 55 60 61 85 86 88 101 108 111 114 118
COMMA (297) 10 24 33 36 43 95
LSQUARE (298) 12 14 27
RSQUARE (299) 12 14 27
B_AND (300) 100
IDENTIFIER (301) 6 7 12 13 26 38 39 75 85 86
INTEGER (302) 103
CHAR (303) 104
BOOL (304)
STRING (305) 105
CONST (306) 23
OPPOSITE (307) 98


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1, on right: 0
CompUnit (55)
    on left: 2 3 4 5, on right: 1 4 5
FuncDef (56)
    on left: 6 7 8, on right: 2 5
FuncFParams (57)
    on left: 9, on right: 6
CommaFuncFParam (58)
    on left: 10 11, on right: 9
FuncFParam (59)
    on left: 12 13, on right: 9 10
MultiExp (60)
    on left: 14 15, on right: 12 14 75
Block (61)
    on left: 16, on right: 6 7 8 52
MultiBlockItem (62)
    on left: 17 18, on right: 16 17
BlockItem (63)
    on left: 19 20, on right: 17
Decl (64)
    on left: 21 22, on right: 3 4 20
ConstDecl (65)
    on left: 23, on right: 21
CommaConstDef (66)
    on left: 24 25, on right: 23 24
ConstDef (67)
    on left: 26, on right: 23 24
MultiConstExp (68)
    on left: 27 28, on right: 26 27 38 39
ConstExp (69)
    on left: 29, on right: 27 30
ConstInitVal (70)
    on left: 30 31 32, on right: 26 31 33
CommaConstInitVal (71)
    on left: 33 34, on right: 31 33
VarDecl (72)
    on left: 35, on right: 22 62
CommaVarDef (73)
    on left: 36 37, on right: 35 36
VarDef (74)
    on left: 38 39, on right: 35 36
InitVal (75)
    on left: 40 41 42, on right: 39 41 43
CommaInitVal (76)
    on left: 43 44, on right: 41 43
Stmt (77)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61, on right:
    19 53 54 55 63 73
Exp1 (78)
    on left: 62 63, on right: 54
Exp2 (79)
    on left: 64 65, on right: 54
Exp3 (80)
    on left: 66 67 68 69 70 71 72, on right: 54
ElseStmt (81)
    on left: 73 74, on right: 53
LVal (82)
    on left: 75, on right: 45 46 47 48 49 68 69 70 71 72 102
Exp (83)
    on left: 76, on right: 14 40 45 46 47 48 49 50 58 60 61 66 68 69
    70 71 72 94 95 101
AddExp (84)
    on left: 77 78 79, on right: 29 76 78 79 117 118 119 120 121 122
MulExp (85)
    on left: 80 81 82 83, on right: 77 78 79 81 82 83
UnaryExp (86)
    on left: 84 85 86 87 88 89 90 91 92 93, on right: 80 81 82 83 87
    89 90 91 92 93
FuncRParams (87)
    on left: 94, on right: 85
CommaExp (88)
    on left: 95 96, on right: 60 61 94 95
UnaryOp (89)
    on left: 97 98, on right: 87 88
SpecialUnaryOp (90)
    on left: 99 100, on right: 89
PrimaryExp (91)
    on left: 101 102 103 104 105, on right: 84
Cond (92)
    on left: 106, on right: 53 55 64 88
LOrExp (93)
    on left: 107 108 109, on right: 106 109
LAndExp (94)
    on left: 110 111 112, on right: 107 108 109 112
EqExp (95)
    on left: 113 114 115 116, on right: 110 111 112 115 116
RelExp (96)
    on left: 117 118 119 120 121 122, on right: 113 114 119 120 121
    122
type (97)
    on left: 123 124 125 126 127, on right: 6 7 8 12 13 23 35


State 0

    0 $accept: . program $end

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4
    T_VOID    shift, and go to state 5
    CONST     shift, and go to state 6

    program    go to state 7
    CompUnit   go to state 8
    FuncDef    go to state 9
    Decl       go to state 10
    ConstDecl  go to state 11
    VarDecl    go to state 12
    type       go to state 13


State 1

  124 type: T_CHAR .

    $default  reduce using rule 124 (type)


State 2

  123 type: T_INT .

    $default  reduce using rule 123 (type)


State 3

  126 type: T_STRING .

    $default  reduce using rule 126 (type)


State 4

  125 type: T_BOOL .

    $default  reduce using rule 125 (type)


State 5

  127 type: T_VOID .

    $default  reduce using rule 127 (type)


State 6

   23 ConstDecl: CONST . type ConstDef CommaConstDef SEMI

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4
    T_VOID    shift, and go to state 5

    type  go to state 14


State 7

    0 $accept: program . $end

    $end  shift, and go to state 15


State 8

    1 program: CompUnit .

    $default  reduce using rule 1 (program)


State 9

    2 CompUnit: FuncDef .
    5         | FuncDef . CompUnit

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4
    T_VOID    shift, and go to state 5
    CONST     shift, and go to state 6

    $default  reduce using rule 2 (CompUnit)

    CompUnit   go to state 16
    FuncDef    go to state 9
    Decl       go to state 10
    ConstDecl  go to state 11
    VarDecl    go to state 12
    type       go to state 13


State 10

    3 CompUnit: Decl .
    4         | Decl . CompUnit

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4
    T_VOID    shift, and go to state 5
    CONST     shift, and go to state 6

    $default  reduce using rule 3 (CompUnit)

    CompUnit   go to state 17
    FuncDef    go to state 9
    Decl       go to state 10
    ConstDecl  go to state 11
    VarDecl    go to state 12
    type       go to state 13


State 11

   21 Decl: ConstDecl .

    $default  reduce using rule 21 (Decl)


State 12

   22 Decl: VarDecl .

    $default  reduce using rule 22 (Decl)


State 13

    6 FuncDef: type . IDENTIFIER LPAREN FuncFParams RPAREN Block
    7        | type . IDENTIFIER LPAREN RPAREN Block
    8        | type . MAIN LPAREN RPAREN Block
   35 VarDecl: type . VarDef CommaVarDef SEMI

    MAIN        shift, and go to state 18
    IDENTIFIER  shift, and go to state 19

    VarDef  go to state 20


State 14

   23 ConstDecl: CONST type . ConstDef CommaConstDef SEMI

    IDENTIFIER  shift, and go to state 21

    ConstDef  go to state 22


State 15

    0 $accept: program $end .

    $default  accept


State 16

    5 CompUnit: FuncDef CompUnit .

    $default  reduce using rule 5 (CompUnit)


State 17

    4 CompUnit: Decl CompUnit .

    $default  reduce using rule 4 (CompUnit)


State 18

    8 FuncDef: type MAIN . LPAREN RPAREN Block

    LPAREN  shift, and go to state 23


State 19

    6 FuncDef: type IDENTIFIER . LPAREN FuncFParams RPAREN Block
    7        | type IDENTIFIER . LPAREN RPAREN Block
   38 VarDef: IDENTIFIER . MultiConstExp
   39       | IDENTIFIER . MultiConstExp ASSIGN InitVal

    LPAREN   shift, and go to state 24
    LSQUARE  shift, and go to state 25

    $default  reduce using rule 28 (MultiConstExp)

    MultiConstExp  go to state 26


State 20

   35 VarDecl: type VarDef . CommaVarDef SEMI

    COMMA  shift, and go to state 27

    $default  reduce using rule 37 (CommaVarDef)

    CommaVarDef  go to state 28


State 21

   26 ConstDef: IDENTIFIER . MultiConstExp ASSIGN ConstInitVal

    LSQUARE  shift, and go to state 25

    $default  reduce using rule 28 (MultiConstExp)

    MultiConstExp  go to state 29


State 22

   23 ConstDecl: CONST type ConstDef . CommaConstDef SEMI

    COMMA  shift, and go to state 30

    $default  reduce using rule 25 (CommaConstDef)

    CommaConstDef  go to state 31


State 23

    8 FuncDef: type MAIN LPAREN . RPAREN Block

    RPAREN  shift, and go to state 32


State 24

    6 FuncDef: type IDENTIFIER LPAREN . FuncFParams RPAREN Block
    7        | type IDENTIFIER LPAREN . RPAREN Block

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4
    T_VOID    shift, and go to state 5
    RPAREN    shift, and go to state 33

    FuncFParams  go to state 34
    FuncFParam   go to state 35
    type         go to state 36


State 25

   27 MultiConstExp: LSQUARE . ConstExp RSQUARE MultiConstExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    ConstExp        go to state 48
    LVal            go to state 49
    AddExp          go to state 50
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 26

   38 VarDef: IDENTIFIER MultiConstExp .
   39       | IDENTIFIER MultiConstExp . ASSIGN InitVal

    ASSIGN  shift, and go to state 56

    $default  reduce using rule 38 (VarDef)


State 27

   36 CommaVarDef: COMMA . VarDef CommaVarDef

    IDENTIFIER  shift, and go to state 57

    VarDef  go to state 58


State 28

   35 VarDecl: type VarDef CommaVarDef . SEMI

    SEMI  shift, and go to state 59


State 29

   26 ConstDef: IDENTIFIER MultiConstExp . ASSIGN ConstInitVal

    ASSIGN  shift, and go to state 60


State 30

   24 CommaConstDef: COMMA . ConstDef CommaConstDef

    IDENTIFIER  shift, and go to state 21

    ConstDef  go to state 61


State 31

   23 ConstDecl: CONST type ConstDef CommaConstDef . SEMI

    SEMI  shift, and go to state 62


State 32

    8 FuncDef: type MAIN LPAREN RPAREN . Block

    LBRACE  shift, and go to state 63

    Block  go to state 64


State 33

    7 FuncDef: type IDENTIFIER LPAREN RPAREN . Block

    LBRACE  shift, and go to state 63

    Block  go to state 65


State 34

    6 FuncDef: type IDENTIFIER LPAREN FuncFParams . RPAREN Block

    RPAREN  shift, and go to state 66


State 35

    9 FuncFParams: FuncFParam . CommaFuncFParam

    COMMA  shift, and go to state 67

    $default  reduce using rule 11 (CommaFuncFParam)

    CommaFuncFParam  go to state 68


State 36

   12 FuncFParam: type . IDENTIFIER LSQUARE RSQUARE MultiExp
   13           | type . IDENTIFIER

    IDENTIFIER  shift, and go to state 69


State 37

   97 UnaryOp: MINUS .

    $default  reduce using rule 97 (UnaryOp)


State 38

   99 SpecialUnaryOp: TIMES .

    $default  reduce using rule 99 (SpecialUnaryOp)


State 39

   90 UnaryExp: INC . UnaryExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    UnaryExp        go to state 70
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 40

   91 UnaryExp: DEC . UnaryExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    UnaryExp        go to state 71
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 41

  101 PrimaryExp: LPAREN . Exp RPAREN

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 72
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 42

  100 SpecialUnaryOp: B_AND .

    $default  reduce using rule 100 (SpecialUnaryOp)


State 43

   75 LVal: IDENTIFIER . MultiExp
   85 UnaryExp: IDENTIFIER . LPAREN FuncRParams RPAREN
   86         | IDENTIFIER . LPAREN RPAREN

    LPAREN   shift, and go to state 74
    LSQUARE  shift, and go to state 75

    $default  reduce using rule 15 (MultiExp)

    MultiExp  go to state 76


State 44

  103 PrimaryExp: INTEGER .

    $default  reduce using rule 103 (PrimaryExp)


State 45

  104 PrimaryExp: CHAR .

    $default  reduce using rule 104 (PrimaryExp)


State 46

  105 PrimaryExp: STRING .

    $default  reduce using rule 105 (PrimaryExp)


State 47

   98 UnaryOp: OPPOSITE .

    $default  reduce using rule 98 (UnaryOp)


State 48

   27 MultiConstExp: LSQUARE ConstExp . RSQUARE MultiConstExp

    RSQUARE  shift, and go to state 77


State 49

  102 PrimaryExp: LVal .

    $default  reduce using rule 102 (PrimaryExp)


State 50

   29 ConstExp: AddExp .

    $default  reduce using rule 29 (ConstExp)


State 51

   77 AddExp: MulExp .
   78       | MulExp . PLUS AddExp
   79       | MulExp . MINUS AddExp

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79

    $default  reduce using rule 77 (AddExp)


State 52

   80 MulExp: UnaryExp .
   81       | UnaryExp . TIMES MulExp
   82       | UnaryExp . OVER MulExp
   83       | UnaryExp . MOD MulExp
   92 UnaryExp: UnaryExp . INC
   93         | UnaryExp . DEC

    TIMES  shift, and go to state 80
    OVER   shift, and go to state 81
    INC    shift, and go to state 82
    DEC    shift, and go to state 83
    MOD    shift, and go to state 84

    $default  reduce using rule 80 (MulExp)


State 53

   87 UnaryExp: UnaryOp . UnaryExp
   88         | UnaryOp . LPAREN Cond RPAREN

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 85
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    UnaryExp        go to state 86
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 54

   89 UnaryExp: SpecialUnaryOp . UnaryExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    UnaryExp        go to state 87
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 55

   84 UnaryExp: PrimaryExp .

    $default  reduce using rule 84 (UnaryExp)


State 56

   39 VarDef: IDENTIFIER MultiConstExp ASSIGN . InitVal

    LBRACE      shift, and go to state 88
    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    InitVal         go to state 89
    LVal            go to state 49
    Exp             go to state 90
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 57

   38 VarDef: IDENTIFIER . MultiConstExp
   39       | IDENTIFIER . MultiConstExp ASSIGN InitVal

    LSQUARE  shift, and go to state 25

    $default  reduce using rule 28 (MultiConstExp)

    MultiConstExp  go to state 26


State 58

   36 CommaVarDef: COMMA VarDef . CommaVarDef

    COMMA  shift, and go to state 27

    $default  reduce using rule 37 (CommaVarDef)

    CommaVarDef  go to state 91


State 59

   35 VarDecl: type VarDef CommaVarDef SEMI .

    $default  reduce using rule 35 (VarDecl)


State 60

   26 ConstDef: IDENTIFIER MultiConstExp ASSIGN . ConstInitVal

    LBRACE      shift, and go to state 92
    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    ConstExp        go to state 93
    ConstInitVal    go to state 94
    LVal            go to state 49
    AddExp          go to state 50
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 61

   24 CommaConstDef: COMMA ConstDef . CommaConstDef

    COMMA  shift, and go to state 30

    $default  reduce using rule 25 (CommaConstDef)

    CommaConstDef  go to state 95


State 62

   23 ConstDecl: CONST type ConstDef CommaConstDef SEMI .

    $default  reduce using rule 23 (ConstDecl)


State 63

   16 Block: LBRACE . MultiBlockItem RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IF          shift, and go to state 96
    FOR         shift, and go to state 97
    WHILE       shift, and go to state 98
    PRINTF      shift, and go to state 99
    SCANF       shift, and go to state 100
    BREAK       shift, and go to state 101
    CONTINUE    shift, and go to state 102
    RETURN      shift, and go to state 103
    LBRACE      shift, and go to state 63
    SEMI        shift, and go to state 104
    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    CONST       shift, and go to state 6
    OPPOSITE    shift, and go to state 47

    $default  reduce using rule 18 (MultiBlockItem)

    Block           go to state 105
    MultiBlockItem  go to state 106
    BlockItem       go to state 107
    Decl            go to state 108
    ConstDecl       go to state 11
    VarDecl         go to state 12
    Stmt            go to state 109
    LVal            go to state 110
    Exp             go to state 111
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55
    type            go to state 112


State 64

    8 FuncDef: type MAIN LPAREN RPAREN Block .

    $default  reduce using rule 8 (FuncDef)


State 65

    7 FuncDef: type IDENTIFIER LPAREN RPAREN Block .

    $default  reduce using rule 7 (FuncDef)


State 66

    6 FuncDef: type IDENTIFIER LPAREN FuncFParams RPAREN . Block

    LBRACE  shift, and go to state 63

    Block  go to state 113


State 67

   10 CommaFuncFParam: COMMA . FuncFParam

    T_CHAR    shift, and go to state 1
    T_INT     shift, and go to state 2
    T_STRING  shift, and go to state 3
    T_BOOL    shift, and go to state 4
    T_VOID    shift, and go to state 5

    FuncFParam  go to state 114
    type        go to state 36


State 68

    9 FuncFParams: FuncFParam CommaFuncFParam .

    $default  reduce using rule 9 (FuncFParams)


State 69

   12 FuncFParam: type IDENTIFIER . LSQUARE RSQUARE MultiExp
   13           | type IDENTIFIER .

    LSQUARE  shift, and go to state 115

    $default  reduce using rule 13 (FuncFParam)


State 70

   90 UnaryExp: INC UnaryExp .
   92         | UnaryExp . INC
   93         | UnaryExp . DEC

    $default  reduce using rule 90 (UnaryExp)


State 71

   91 UnaryExp: DEC UnaryExp .
   92         | UnaryExp . INC
   93         | UnaryExp . DEC

    $default  reduce using rule 91 (UnaryExp)


State 72

  101 PrimaryExp: LPAREN Exp . RPAREN

    RPAREN  shift, and go to state 116


State 73

   76 Exp: AddExp .

    $default  reduce using rule 76 (Exp)


State 74

   85 UnaryExp: IDENTIFIER LPAREN . FuncRParams RPAREN
   86         | IDENTIFIER LPAREN . RPAREN

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    RPAREN      shift, and go to state 117
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 118
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    FuncRParams     go to state 119
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 75

   14 MultiExp: LSQUARE . Exp RSQUARE MultiExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 120
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 76

   75 LVal: IDENTIFIER MultiExp .

    $default  reduce using rule 75 (LVal)


State 77

   27 MultiConstExp: LSQUARE ConstExp RSQUARE . MultiConstExp

    LSQUARE  shift, and go to state 25

    $default  reduce using rule 28 (MultiConstExp)

    MultiConstExp  go to state 121


State 78

   78 AddExp: MulExp PLUS . AddExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    AddExp          go to state 122
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 79

   79 AddExp: MulExp MINUS . AddExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    AddExp          go to state 123
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 80

   81 MulExp: UnaryExp TIMES . MulExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    MulExp          go to state 124
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 81

   82 MulExp: UnaryExp OVER . MulExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    MulExp          go to state 125
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 82

   92 UnaryExp: UnaryExp INC .

    $default  reduce using rule 92 (UnaryExp)


State 83

   93 UnaryExp: UnaryExp DEC .

    $default  reduce using rule 93 (UnaryExp)


State 84

   83 MulExp: UnaryExp MOD . MulExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    MulExp          go to state 126
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 85

   88 UnaryExp: UnaryOp LPAREN . Cond RPAREN
  101 PrimaryExp: LPAREN . Exp RPAREN

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 127
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 72
    AddExp          go to state 128
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55
    Cond            go to state 129
    LOrExp          go to state 130
    LAndExp         go to state 131
    EqExp           go to state 132
    RelExp          go to state 133


State 86

   87 UnaryExp: UnaryOp UnaryExp .
   92         | UnaryExp . INC
   93         | UnaryExp . DEC

    INC  shift, and go to state 82
    DEC  shift, and go to state 83

    INC       [reduce using rule 87 (UnaryExp)]
    DEC       [reduce using rule 87 (UnaryExp)]
    $default  reduce using rule 87 (UnaryExp)


State 87

   89 UnaryExp: SpecialUnaryOp UnaryExp .
   92         | UnaryExp . INC
   93         | UnaryExp . DEC

    INC  shift, and go to state 82
    DEC  shift, and go to state 83

    INC       [reduce using rule 89 (UnaryExp)]
    DEC       [reduce using rule 89 (UnaryExp)]
    $default  reduce using rule 89 (UnaryExp)


State 88

   41 InitVal: LBRACE . InitVal CommaInitVal RBRACE
   42        | LBRACE . RBRACE

    LBRACE      shift, and go to state 88
    RBRACE      shift, and go to state 134
    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    InitVal         go to state 135
    LVal            go to state 49
    Exp             go to state 90
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 89

   39 VarDef: IDENTIFIER MultiConstExp ASSIGN InitVal .

    $default  reduce using rule 39 (VarDef)


State 90

   40 InitVal: Exp .

    $default  reduce using rule 40 (InitVal)


State 91

   36 CommaVarDef: COMMA VarDef CommaVarDef .

    $default  reduce using rule 36 (CommaVarDef)


State 92

   31 ConstInitVal: LBRACE . ConstInitVal CommaConstInitVal RBRACE
   32             | LBRACE . RBRACE

    LBRACE      shift, and go to state 92
    RBRACE      shift, and go to state 136
    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    ConstExp        go to state 93
    ConstInitVal    go to state 137
    LVal            go to state 49
    AddExp          go to state 50
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 93

   30 ConstInitVal: ConstExp .

    $default  reduce using rule 30 (ConstInitVal)


State 94

   26 ConstDef: IDENTIFIER MultiConstExp ASSIGN ConstInitVal .

    $default  reduce using rule 26 (ConstDef)


State 95

   24 CommaConstDef: COMMA ConstDef CommaConstDef .

    $default  reduce using rule 24 (CommaConstDef)


State 96

   53 Stmt: IF . LPAREN Cond RPAREN Stmt ElseStmt

    LPAREN  shift, and go to state 138


State 97

   54 Stmt: FOR . LPAREN Exp1 Exp2 Exp3 RPAREN Stmt

    LPAREN  shift, and go to state 139


State 98

   55 Stmt: WHILE . LPAREN Cond RPAREN Stmt

    LPAREN  shift, and go to state 140


State 99

   60 Stmt: PRINTF . LPAREN Exp CommaExp RPAREN SEMI

    LPAREN  shift, and go to state 141


State 100

   61 Stmt: SCANF . LPAREN Exp CommaExp RPAREN SEMI

    LPAREN  shift, and go to state 142


State 101

   56 Stmt: BREAK . SEMI

    SEMI  shift, and go to state 143


State 102

   57 Stmt: CONTINUE . SEMI

    SEMI  shift, and go to state 144


State 103

   58 Stmt: RETURN . Exp SEMI
   59     | RETURN . SEMI

    SEMI        shift, and go to state 145
    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 146
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 104

   51 Stmt: SEMI .

    $default  reduce using rule 51 (Stmt)


State 105

   52 Stmt: Block .

    $default  reduce using rule 52 (Stmt)


State 106

   16 Block: LBRACE MultiBlockItem . RBRACE

    RBRACE  shift, and go to state 147


State 107

   17 MultiBlockItem: BlockItem . MultiBlockItem

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IF          shift, and go to state 96
    FOR         shift, and go to state 97
    WHILE       shift, and go to state 98
    PRINTF      shift, and go to state 99
    SCANF       shift, and go to state 100
    BREAK       shift, and go to state 101
    CONTINUE    shift, and go to state 102
    RETURN      shift, and go to state 103
    LBRACE      shift, and go to state 63
    SEMI        shift, and go to state 104
    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    CONST       shift, and go to state 6
    OPPOSITE    shift, and go to state 47

    $default  reduce using rule 18 (MultiBlockItem)

    Block           go to state 105
    MultiBlockItem  go to state 148
    BlockItem       go to state 107
    Decl            go to state 108
    ConstDecl       go to state 11
    VarDecl         go to state 12
    Stmt            go to state 109
    LVal            go to state 110
    Exp             go to state 111
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55
    type            go to state 112


State 108

   20 BlockItem: Decl .

    $default  reduce using rule 20 (BlockItem)


State 109

   19 BlockItem: Stmt .

    $default  reduce using rule 19 (BlockItem)


State 110

   45 Stmt: LVal . ASSIGN Exp SEMI
   46     | LVal . PLUS ASSIGN Exp SEMI
   47     | LVal . MINUS ASSIGN Exp SEMI
   48     | LVal . TIMES ASSIGN Exp SEMI
   49     | LVal . OVER ASSIGN Exp SEMI
  102 PrimaryExp: LVal .

    PLUS    shift, and go to state 149
    MINUS   shift, and go to state 150
    TIMES   shift, and go to state 151
    OVER    shift, and go to state 152
    ASSIGN  shift, and go to state 153

    PLUS      [reduce using rule 102 (PrimaryExp)]
    MINUS     [reduce using rule 102 (PrimaryExp)]
    TIMES     [reduce using rule 102 (PrimaryExp)]
    OVER      [reduce using rule 102 (PrimaryExp)]
    $default  reduce using rule 102 (PrimaryExp)


State 111

   50 Stmt: Exp . SEMI

    SEMI  shift, and go to state 154


State 112

   35 VarDecl: type . VarDef CommaVarDef SEMI

    IDENTIFIER  shift, and go to state 57

    VarDef  go to state 20


State 113

    6 FuncDef: type IDENTIFIER LPAREN FuncFParams RPAREN Block .

    $default  reduce using rule 6 (FuncDef)


State 114

   10 CommaFuncFParam: COMMA FuncFParam .

    $default  reduce using rule 10 (CommaFuncFParam)


State 115

   12 FuncFParam: type IDENTIFIER LSQUARE . RSQUARE MultiExp

    RSQUARE  shift, and go to state 155


State 116

  101 PrimaryExp: LPAREN Exp RPAREN .

    $default  reduce using rule 101 (PrimaryExp)


State 117

   86 UnaryExp: IDENTIFIER LPAREN RPAREN .

    $default  reduce using rule 86 (UnaryExp)


State 118

   94 FuncRParams: Exp . CommaExp

    COMMA  shift, and go to state 156

    $default  reduce using rule 96 (CommaExp)

    CommaExp  go to state 157


State 119

   85 UnaryExp: IDENTIFIER LPAREN FuncRParams . RPAREN

    RPAREN  shift, and go to state 158


State 120

   14 MultiExp: LSQUARE Exp . RSQUARE MultiExp

    RSQUARE  shift, and go to state 159


State 121

   27 MultiConstExp: LSQUARE ConstExp RSQUARE MultiConstExp .

    $default  reduce using rule 27 (MultiConstExp)


State 122

   78 AddExp: MulExp PLUS AddExp .

    $default  reduce using rule 78 (AddExp)


State 123

   79 AddExp: MulExp MINUS AddExp .

    $default  reduce using rule 79 (AddExp)


State 124

   81 MulExp: UnaryExp TIMES MulExp .

    $default  reduce using rule 81 (MulExp)


State 125

   82 MulExp: UnaryExp OVER MulExp .

    $default  reduce using rule 82 (MulExp)


State 126

   83 MulExp: UnaryExp MOD MulExp .

    $default  reduce using rule 83 (MulExp)


State 127

  101 PrimaryExp: LPAREN . Exp RPAREN
  108 LOrExp: LPAREN . LAndExp RPAREN
  111 LAndExp: LPAREN . EqExp RPAREN
  114 EqExp: LPAREN . RelExp RPAREN
  118 RelExp: LPAREN . AddExp RPAREN

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 160
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 72
    AddExp          go to state 161
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55
    LAndExp         go to state 162
    EqExp           go to state 163
    RelExp          go to state 164


State 128

   76 Exp: AddExp .
  117 RelExp: AddExp .

    RPAREN    reduce using rule 76 (Exp)
    RPAREN    [reduce using rule 117 (RelExp)]
    $default  reduce using rule 117 (RelExp)


State 129

   88 UnaryExp: UnaryOp LPAREN Cond . RPAREN

    RPAREN  shift, and go to state 165


State 130

  106 Cond: LOrExp .

    $default  reduce using rule 106 (Cond)


State 131

  107 LOrExp: LAndExp .
  109       | LAndExp . OR LOrExp

    OR  shift, and go to state 166

    $default  reduce using rule 107 (LOrExp)


State 132

  110 LAndExp: EqExp .
  112        | EqExp . AND LAndExp
  115 EqExp: EqExp . EQ EqExp
  116      | EqExp . NZ EqExp

    EQ   shift, and go to state 167
    NZ   shift, and go to state 168
    AND  shift, and go to state 169

    $default  reduce using rule 110 (LAndExp)


State 133

  113 EqExp: RelExp .
  119 RelExp: RelExp . LT AddExp
  120       | RelExp . GT AddExp
  121       | RelExp . LE AddExp
  122       | RelExp . GE AddExp

    LT  shift, and go to state 170
    GT  shift, and go to state 171
    GE  shift, and go to state 172
    LE  shift, and go to state 173

    $default  reduce using rule 113 (EqExp)


State 134

   42 InitVal: LBRACE RBRACE .

    $default  reduce using rule 42 (InitVal)


State 135

   41 InitVal: LBRACE InitVal . CommaInitVal RBRACE

    COMMA  shift, and go to state 174

    $default  reduce using rule 44 (CommaInitVal)

    CommaInitVal  go to state 175


State 136

   32 ConstInitVal: LBRACE RBRACE .

    $default  reduce using rule 32 (ConstInitVal)


State 137

   31 ConstInitVal: LBRACE ConstInitVal . CommaConstInitVal RBRACE

    COMMA  shift, and go to state 176

    $default  reduce using rule 34 (CommaConstInitVal)

    CommaConstInitVal  go to state 177


State 138

   53 Stmt: IF LPAREN . Cond RPAREN Stmt ElseStmt

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 127
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    AddExp          go to state 178
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55
    Cond            go to state 179
    LOrExp          go to state 130
    LAndExp         go to state 131
    EqExp           go to state 132
    RelExp          go to state 133


State 139

   54 Stmt: FOR LPAREN . Exp1 Exp2 Exp3 RPAREN Stmt

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_STRING    shift, and go to state 3
    T_BOOL      shift, and go to state 4
    T_VOID      shift, and go to state 5
    IF          shift, and go to state 96
    FOR         shift, and go to state 97
    WHILE       shift, and go to state 98
    PRINTF      shift, and go to state 99
    SCANF       shift, and go to state 100
    BREAK       shift, and go to state 101
    CONTINUE    shift, and go to state 102
    RETURN      shift, and go to state 103
    LBRACE      shift, and go to state 63
    SEMI        shift, and go to state 104
    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    Block           go to state 105
    VarDecl         go to state 180
    Stmt            go to state 181
    Exp1            go to state 182
    LVal            go to state 110
    Exp             go to state 111
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55
    type            go to state 112


State 140

   55 Stmt: WHILE LPAREN . Cond RPAREN Stmt

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 127
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    AddExp          go to state 178
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55
    Cond            go to state 183
    LOrExp          go to state 130
    LAndExp         go to state 131
    EqExp           go to state 132
    RelExp          go to state 133


State 141

   60 Stmt: PRINTF LPAREN . Exp CommaExp RPAREN SEMI

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 184
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 142

   61 Stmt: SCANF LPAREN . Exp CommaExp RPAREN SEMI

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 185
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 143

   56 Stmt: BREAK SEMI .

    $default  reduce using rule 56 (Stmt)


State 144

   57 Stmt: CONTINUE SEMI .

    $default  reduce using rule 57 (Stmt)


State 145

   59 Stmt: RETURN SEMI .

    $default  reduce using rule 59 (Stmt)


State 146

   58 Stmt: RETURN Exp . SEMI

    SEMI  shift, and go to state 186


State 147

   16 Block: LBRACE MultiBlockItem RBRACE .

    $default  reduce using rule 16 (Block)


State 148

   17 MultiBlockItem: BlockItem MultiBlockItem .

    $default  reduce using rule 17 (MultiBlockItem)


State 149

   46 Stmt: LVal PLUS . ASSIGN Exp SEMI

    ASSIGN  shift, and go to state 187


State 150

   47 Stmt: LVal MINUS . ASSIGN Exp SEMI

    ASSIGN  shift, and go to state 188


State 151

   48 Stmt: LVal TIMES . ASSIGN Exp SEMI

    ASSIGN  shift, and go to state 189


State 152

   49 Stmt: LVal OVER . ASSIGN Exp SEMI

    ASSIGN  shift, and go to state 190


State 153

   45 Stmt: LVal ASSIGN . Exp SEMI

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 191
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 154

   50 Stmt: Exp SEMI .

    $default  reduce using rule 50 (Stmt)


State 155

   12 FuncFParam: type IDENTIFIER LSQUARE RSQUARE . MultiExp

    LSQUARE  shift, and go to state 75

    $default  reduce using rule 15 (MultiExp)

    MultiExp  go to state 192


State 156

   95 CommaExp: COMMA . Exp CommaExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 193
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 157

   94 FuncRParams: Exp CommaExp .

    $default  reduce using rule 94 (FuncRParams)


State 158

   85 UnaryExp: IDENTIFIER LPAREN FuncRParams RPAREN .

    $default  reduce using rule 85 (UnaryExp)


State 159

   14 MultiExp: LSQUARE Exp RSQUARE . MultiExp

    LSQUARE  shift, and go to state 75

    $default  reduce using rule 15 (MultiExp)

    MultiExp  go to state 194


State 160

  101 PrimaryExp: LPAREN . Exp RPAREN
  111 LAndExp: LPAREN . EqExp RPAREN
  114 EqExp: LPAREN . RelExp RPAREN
  118 RelExp: LPAREN . AddExp RPAREN

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 195
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 72
    AddExp          go to state 161
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55
    EqExp           go to state 196
    RelExp          go to state 164


State 161

   76 Exp: AddExp .
  117 RelExp: AddExp .
  118       | LPAREN AddExp . RPAREN

    RPAREN  shift, and go to state 197

    RPAREN    [reduce using rule 76 (Exp)]
    RPAREN    [reduce using rule 117 (RelExp)]
    $default  reduce using rule 117 (RelExp)


State 162

  108 LOrExp: LPAREN LAndExp . RPAREN

    RPAREN  shift, and go to state 198


State 163

  110 LAndExp: EqExp .
  111        | LPAREN EqExp . RPAREN
  112        | EqExp . AND LAndExp
  115 EqExp: EqExp . EQ EqExp
  116      | EqExp . NZ EqExp

    EQ      shift, and go to state 167
    NZ      shift, and go to state 168
    AND     shift, and go to state 169
    RPAREN  shift, and go to state 199

    RPAREN  [reduce using rule 110 (LAndExp)]


State 164

  113 EqExp: RelExp .
  114      | LPAREN RelExp . RPAREN
  119 RelExp: RelExp . LT AddExp
  120       | RelExp . GT AddExp
  121       | RelExp . LE AddExp
  122       | RelExp . GE AddExp

    LT      shift, and go to state 170
    GT      shift, and go to state 171
    GE      shift, and go to state 172
    LE      shift, and go to state 173
    RPAREN  shift, and go to state 200

    RPAREN    [reduce using rule 113 (EqExp)]
    $default  reduce using rule 113 (EqExp)


State 165

   88 UnaryExp: UnaryOp LPAREN Cond RPAREN .

    $default  reduce using rule 88 (UnaryExp)


State 166

  109 LOrExp: LAndExp OR . LOrExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 127
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    AddExp          go to state 178
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55
    LOrExp          go to state 201
    LAndExp         go to state 131
    EqExp           go to state 132
    RelExp          go to state 133


State 167

  115 EqExp: EqExp EQ . EqExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 195
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    AddExp          go to state 178
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55
    EqExp           go to state 202
    RelExp          go to state 133


State 168

  116 EqExp: EqExp NZ . EqExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 195
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    AddExp          go to state 178
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55
    EqExp           go to state 203
    RelExp          go to state 133


State 169

  112 LAndExp: EqExp AND . LAndExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 160
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    AddExp          go to state 178
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55
    LAndExp         go to state 204
    EqExp           go to state 132
    RelExp          go to state 133


State 170

  119 RelExp: RelExp LT . AddExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    AddExp          go to state 205
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 171

  120 RelExp: RelExp GT . AddExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    AddExp          go to state 206
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 172

  122 RelExp: RelExp GE . AddExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    AddExp          go to state 207
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 173

  121 RelExp: RelExp LE . AddExp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    AddExp          go to state 208
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 174

   43 CommaInitVal: COMMA . InitVal CommaInitVal

    LBRACE      shift, and go to state 88
    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    InitVal         go to state 209
    LVal            go to state 49
    Exp             go to state 90
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 175

   41 InitVal: LBRACE InitVal CommaInitVal . RBRACE

    RBRACE  shift, and go to state 210


State 176

   33 CommaConstInitVal: COMMA . ConstInitVal CommaConstInitVal

    LBRACE      shift, and go to state 92
    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    ConstExp        go to state 93
    ConstInitVal    go to state 211
    LVal            go to state 49
    AddExp          go to state 50
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 177

   31 ConstInitVal: LBRACE ConstInitVal CommaConstInitVal . RBRACE

    RBRACE  shift, and go to state 212


State 178

  117 RelExp: AddExp .

    $default  reduce using rule 117 (RelExp)


State 179

   53 Stmt: IF LPAREN Cond . RPAREN Stmt ElseStmt

    RPAREN  shift, and go to state 213


State 180

   62 Exp1: VarDecl .

    $default  reduce using rule 62 (Exp1)


State 181

   63 Exp1: Stmt .

    $default  reduce using rule 63 (Exp1)


State 182

   54 Stmt: FOR LPAREN Exp1 . Exp2 Exp3 RPAREN Stmt

    SEMI        shift, and go to state 214
    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 127
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    Exp2            go to state 215
    LVal            go to state 49
    AddExp          go to state 178
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55
    Cond            go to state 216
    LOrExp          go to state 130
    LAndExp         go to state 131
    EqExp           go to state 132
    RelExp          go to state 133


State 183

   55 Stmt: WHILE LPAREN Cond . RPAREN Stmt

    RPAREN  shift, and go to state 217


State 184

   60 Stmt: PRINTF LPAREN Exp . CommaExp RPAREN SEMI

    COMMA  shift, and go to state 156

    $default  reduce using rule 96 (CommaExp)

    CommaExp  go to state 218


State 185

   61 Stmt: SCANF LPAREN Exp . CommaExp RPAREN SEMI

    COMMA  shift, and go to state 156

    $default  reduce using rule 96 (CommaExp)

    CommaExp  go to state 219


State 186

   58 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 58 (Stmt)


State 187

   46 Stmt: LVal PLUS ASSIGN . Exp SEMI

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 220
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 188

   47 Stmt: LVal MINUS ASSIGN . Exp SEMI

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 221
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 189

   48 Stmt: LVal TIMES ASSIGN . Exp SEMI

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 222
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 190

   49 Stmt: LVal OVER ASSIGN . Exp SEMI

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 223
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 191

   45 Stmt: LVal ASSIGN Exp . SEMI

    SEMI  shift, and go to state 224


State 192

   12 FuncFParam: type IDENTIFIER LSQUARE RSQUARE MultiExp .

    $default  reduce using rule 12 (FuncFParam)


State 193

   95 CommaExp: COMMA Exp . CommaExp

    COMMA  shift, and go to state 156

    $default  reduce using rule 96 (CommaExp)

    CommaExp  go to state 225


State 194

   14 MultiExp: LSQUARE Exp RSQUARE MultiExp .

    $default  reduce using rule 14 (MultiExp)


State 195

  101 PrimaryExp: LPAREN . Exp RPAREN
  114 EqExp: LPAREN . RelExp RPAREN
  118 RelExp: LPAREN . AddExp RPAREN

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 226
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 72
    AddExp          go to state 161
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55
    RelExp          go to state 227


State 196

  111 LAndExp: LPAREN EqExp . RPAREN
  115 EqExp: EqExp . EQ EqExp
  116      | EqExp . NZ EqExp

    EQ      shift, and go to state 167
    NZ      shift, and go to state 168
    RPAREN  shift, and go to state 199


State 197

  118 RelExp: LPAREN AddExp RPAREN .

    $default  reduce using rule 118 (RelExp)


State 198

  108 LOrExp: LPAREN LAndExp RPAREN .

    $default  reduce using rule 108 (LOrExp)


State 199

  111 LAndExp: LPAREN EqExp RPAREN .

    $default  reduce using rule 111 (LAndExp)


State 200

  114 EqExp: LPAREN RelExp RPAREN .

    $default  reduce using rule 114 (EqExp)


State 201

  109 LOrExp: LAndExp OR LOrExp .

    $default  reduce using rule 109 (LOrExp)


State 202

  115 EqExp: EqExp . EQ EqExp
  115      | EqExp EQ EqExp .
  116      | EqExp . NZ EqExp

    $default  reduce using rule 115 (EqExp)


State 203

  115 EqExp: EqExp . EQ EqExp
  116      | EqExp . NZ EqExp
  116      | EqExp NZ EqExp .

    $default  reduce using rule 116 (EqExp)


State 204

  112 LAndExp: EqExp AND LAndExp .

    $default  reduce using rule 112 (LAndExp)


State 205

  119 RelExp: RelExp LT AddExp .

    $default  reduce using rule 119 (RelExp)


State 206

  120 RelExp: RelExp GT AddExp .

    $default  reduce using rule 120 (RelExp)


State 207

  122 RelExp: RelExp GE AddExp .

    $default  reduce using rule 122 (RelExp)


State 208

  121 RelExp: RelExp LE AddExp .

    $default  reduce using rule 121 (RelExp)


State 209

   43 CommaInitVal: COMMA InitVal . CommaInitVal

    COMMA  shift, and go to state 174

    $default  reduce using rule 44 (CommaInitVal)

    CommaInitVal  go to state 228


State 210

   41 InitVal: LBRACE InitVal CommaInitVal RBRACE .

    $default  reduce using rule 41 (InitVal)


State 211

   33 CommaConstInitVal: COMMA ConstInitVal . CommaConstInitVal

    COMMA  shift, and go to state 176

    $default  reduce using rule 34 (CommaConstInitVal)

    CommaConstInitVal  go to state 229


State 212

   31 ConstInitVal: LBRACE ConstInitVal CommaConstInitVal RBRACE .

    $default  reduce using rule 31 (ConstInitVal)


State 213

   53 Stmt: IF LPAREN Cond RPAREN . Stmt ElseStmt

    IF          shift, and go to state 96
    FOR         shift, and go to state 97
    WHILE       shift, and go to state 98
    PRINTF      shift, and go to state 99
    SCANF       shift, and go to state 100
    BREAK       shift, and go to state 101
    CONTINUE    shift, and go to state 102
    RETURN      shift, and go to state 103
    LBRACE      shift, and go to state 63
    SEMI        shift, and go to state 104
    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    Block           go to state 105
    Stmt            go to state 230
    LVal            go to state 110
    Exp             go to state 111
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 214

   65 Exp2: SEMI .

    $default  reduce using rule 65 (Exp2)


State 215

   54 Stmt: FOR LPAREN Exp1 Exp2 . Exp3 RPAREN Stmt

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    $default  reduce using rule 67 (Exp3)

    Exp3            go to state 231
    LVal            go to state 232
    Exp             go to state 233
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 216

   64 Exp2: Cond . SEMI

    SEMI  shift, and go to state 234


State 217

   55 Stmt: WHILE LPAREN Cond RPAREN . Stmt

    IF          shift, and go to state 96
    FOR         shift, and go to state 97
    WHILE       shift, and go to state 98
    PRINTF      shift, and go to state 99
    SCANF       shift, and go to state 100
    BREAK       shift, and go to state 101
    CONTINUE    shift, and go to state 102
    RETURN      shift, and go to state 103
    LBRACE      shift, and go to state 63
    SEMI        shift, and go to state 104
    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    Block           go to state 105
    Stmt            go to state 235
    LVal            go to state 110
    Exp             go to state 111
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 218

   60 Stmt: PRINTF LPAREN Exp CommaExp . RPAREN SEMI

    RPAREN  shift, and go to state 236


State 219

   61 Stmt: SCANF LPAREN Exp CommaExp . RPAREN SEMI

    RPAREN  shift, and go to state 237


State 220

   46 Stmt: LVal PLUS ASSIGN Exp . SEMI

    SEMI  shift, and go to state 238


State 221

   47 Stmt: LVal MINUS ASSIGN Exp . SEMI

    SEMI  shift, and go to state 239


State 222

   48 Stmt: LVal TIMES ASSIGN Exp . SEMI

    SEMI  shift, and go to state 240


State 223

   49 Stmt: LVal OVER ASSIGN Exp . SEMI

    SEMI  shift, and go to state 241


State 224

   45 Stmt: LVal ASSIGN Exp SEMI .

    $default  reduce using rule 45 (Stmt)


State 225

   95 CommaExp: COMMA Exp CommaExp .

    $default  reduce using rule 95 (CommaExp)


State 226

  101 PrimaryExp: LPAREN . Exp RPAREN
  118 RelExp: LPAREN . AddExp RPAREN

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 72
    AddExp          go to state 242
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 227

  114 EqExp: LPAREN RelExp . RPAREN
  119 RelExp: RelExp . LT AddExp
  120       | RelExp . GT AddExp
  121       | RelExp . LE AddExp
  122       | RelExp . GE AddExp

    LT      shift, and go to state 170
    GT      shift, and go to state 171
    GE      shift, and go to state 172
    LE      shift, and go to state 173
    RPAREN  shift, and go to state 200


State 228

   43 CommaInitVal: COMMA InitVal CommaInitVal .

    $default  reduce using rule 43 (CommaInitVal)


State 229

   33 CommaConstInitVal: COMMA ConstInitVal CommaConstInitVal .

    $default  reduce using rule 33 (CommaConstInitVal)


State 230

   53 Stmt: IF LPAREN Cond RPAREN Stmt . ElseStmt

    ELSE  shift, and go to state 243

    ELSE      [reduce using rule 74 (ElseStmt)]
    $default  reduce using rule 74 (ElseStmt)

    ElseStmt  go to state 244


State 231

   54 Stmt: FOR LPAREN Exp1 Exp2 Exp3 . RPAREN Stmt

    RPAREN  shift, and go to state 245


State 232

   68 Exp3: LVal . ASSIGN Exp
   69     | LVal . PLUS ASSIGN Exp
   70     | LVal . MINUS ASSIGN Exp
   71     | LVal . TIMES ASSIGN Exp
   72     | LVal . OVER ASSIGN Exp
  102 PrimaryExp: LVal .

    PLUS    shift, and go to state 246
    MINUS   shift, and go to state 247
    TIMES   shift, and go to state 248
    OVER    shift, and go to state 249
    ASSIGN  shift, and go to state 250

    PLUS      [reduce using rule 102 (PrimaryExp)]
    MINUS     [reduce using rule 102 (PrimaryExp)]
    TIMES     [reduce using rule 102 (PrimaryExp)]
    OVER      [reduce using rule 102 (PrimaryExp)]
    $default  reduce using rule 102 (PrimaryExp)


State 233

   66 Exp3: Exp .

    $default  reduce using rule 66 (Exp3)


State 234

   64 Exp2: Cond SEMI .

    $default  reduce using rule 64 (Exp2)


State 235

   55 Stmt: WHILE LPAREN Cond RPAREN Stmt .

    $default  reduce using rule 55 (Stmt)


State 236

   60 Stmt: PRINTF LPAREN Exp CommaExp RPAREN . SEMI

    SEMI  shift, and go to state 251


State 237

   61 Stmt: SCANF LPAREN Exp CommaExp RPAREN . SEMI

    SEMI  shift, and go to state 252


State 238

   46 Stmt: LVal PLUS ASSIGN Exp SEMI .

    $default  reduce using rule 46 (Stmt)


State 239

   47 Stmt: LVal MINUS ASSIGN Exp SEMI .

    $default  reduce using rule 47 (Stmt)


State 240

   48 Stmt: LVal TIMES ASSIGN Exp SEMI .

    $default  reduce using rule 48 (Stmt)


State 241

   49 Stmt: LVal OVER ASSIGN Exp SEMI .

    $default  reduce using rule 49 (Stmt)


State 242

   76 Exp: AddExp .
  118 RelExp: LPAREN AddExp . RPAREN

    RPAREN  shift, and go to state 197

    RPAREN  [reduce using rule 76 (Exp)]


State 243

   73 ElseStmt: ELSE . Stmt

    IF          shift, and go to state 96
    FOR         shift, and go to state 97
    WHILE       shift, and go to state 98
    PRINTF      shift, and go to state 99
    SCANF       shift, and go to state 100
    BREAK       shift, and go to state 101
    CONTINUE    shift, and go to state 102
    RETURN      shift, and go to state 103
    LBRACE      shift, and go to state 63
    SEMI        shift, and go to state 104
    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    Block           go to state 105
    Stmt            go to state 253
    LVal            go to state 110
    Exp             go to state 111
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 244

   53 Stmt: IF LPAREN Cond RPAREN Stmt ElseStmt .

    $default  reduce using rule 53 (Stmt)


State 245

   54 Stmt: FOR LPAREN Exp1 Exp2 Exp3 RPAREN . Stmt

    IF          shift, and go to state 96
    FOR         shift, and go to state 97
    WHILE       shift, and go to state 98
    PRINTF      shift, and go to state 99
    SCANF       shift, and go to state 100
    BREAK       shift, and go to state 101
    CONTINUE    shift, and go to state 102
    RETURN      shift, and go to state 103
    LBRACE      shift, and go to state 63
    SEMI        shift, and go to state 104
    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    Block           go to state 105
    Stmt            go to state 254
    LVal            go to state 110
    Exp             go to state 111
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 246

   69 Exp3: LVal PLUS . ASSIGN Exp

    ASSIGN  shift, and go to state 255


State 247

   70 Exp3: LVal MINUS . ASSIGN Exp

    ASSIGN  shift, and go to state 256


State 248

   71 Exp3: LVal TIMES . ASSIGN Exp

    ASSIGN  shift, and go to state 257


State 249

   72 Exp3: LVal OVER . ASSIGN Exp

    ASSIGN  shift, and go to state 258


State 250

   68 Exp3: LVal ASSIGN . Exp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 259
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 251

   60 Stmt: PRINTF LPAREN Exp CommaExp RPAREN SEMI .

    $default  reduce using rule 60 (Stmt)


State 252

   61 Stmt: SCANF LPAREN Exp CommaExp RPAREN SEMI .

    $default  reduce using rule 61 (Stmt)


State 253

   73 ElseStmt: ELSE Stmt .

    $default  reduce using rule 73 (ElseStmt)


State 254

   54 Stmt: FOR LPAREN Exp1 Exp2 Exp3 RPAREN Stmt .

    $default  reduce using rule 54 (Stmt)


State 255

   69 Exp3: LVal PLUS ASSIGN . Exp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 260
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 256

   70 Exp3: LVal MINUS ASSIGN . Exp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 261
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 257

   71 Exp3: LVal TIMES ASSIGN . Exp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 262
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 258

   72 Exp3: LVal OVER ASSIGN . Exp

    MINUS       shift, and go to state 37
    TIMES       shift, and go to state 38
    INC         shift, and go to state 39
    DEC         shift, and go to state 40
    LPAREN      shift, and go to state 41
    B_AND       shift, and go to state 42
    IDENTIFIER  shift, and go to state 43
    INTEGER     shift, and go to state 44
    CHAR        shift, and go to state 45
    STRING      shift, and go to state 46
    OPPOSITE    shift, and go to state 47

    LVal            go to state 49
    Exp             go to state 263
    AddExp          go to state 73
    MulExp          go to state 51
    UnaryExp        go to state 52
    UnaryOp         go to state 53
    SpecialUnaryOp  go to state 54
    PrimaryExp      go to state 55


State 259

   68 Exp3: LVal ASSIGN Exp .

    $default  reduce using rule 68 (Exp3)


State 260

   69 Exp3: LVal PLUS ASSIGN Exp .

    $default  reduce using rule 69 (Exp3)


State 261

   70 Exp3: LVal MINUS ASSIGN Exp .

    $default  reduce using rule 70 (Exp3)


State 262

   71 Exp3: LVal TIMES ASSIGN Exp .

    $default  reduce using rule 71 (Exp3)


State 263

   72 Exp3: LVal OVER ASSIGN Exp .

    $default  reduce using rule 72 (Exp3)
